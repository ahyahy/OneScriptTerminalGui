// BSLLS-off
// КаталогСправки задан как "C:\444\OneScriptTerminalGui\docs\OSTGui".
// КаталогБиблиотеки задан как "C:\444\111\OneScriptTerminalGui\OneScriptTerminalGui\bin\Debug".
Перем Ф, ИмяВременногоФайла, Таймер, ПолеВвода1, Форма1;
Перем СписокОшибок, КаталогСправки, КаталогБиблиотеки, КаталогТестов, ИмяЛогФайла;
Перем Вин;

Функция СтрНайтиМежду(СтрПараметр, Фрагмент1 = Неопределено, Фрагмент2 = Неопределено, ИсключитьФрагменты = Истина, БезНаложения = Истина)
	//Стр - исходная строка
	//Фрагмент1 - подстрока поиска от которой ведем поиск
	//Фрагмент2 - подстрока поиска до которой ведем поиск
	//ИсключитьФрагменты - не включать Фрагмент1 и Фрагмент2 в результат
	//БезНаложения - в результат не будут включены участки, содержащие дугие найденные участки, удовлетворяющие переданным параметрам
	//функция возвращает массив строк
	Стр = СтрПараметр;
	М = Новый Массив;
	Если (Фрагмент1 <> Неопределено) и (Фрагмент2 = Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент1);
		Пока Позиция > 0 Цикл
			М.Добавить(?(ИсключитьФрагменты, Сред(Стр, Позиция + СтрДлина(Фрагмент1)), Сред(Стр, Позиция)));
			Стр = Сред(Стр, Позиция + 1);
			Позиция = Найти(Стр, Фрагмент1);
		КонецЦикла;
	ИначеЕсли (Фрагмент1 = Неопределено) и (Фрагмент2 <> Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент2);
		СуммаПозиций = Позиция;
		Пока Позиция > 0 Цикл
			М.Добавить(?(ИсключитьФрагменты, Сред(Стр, 1, СуммаПозиций - 1), Сред(Стр, 1, СуммаПозиций - 1 + СтрДлина(Фрагмент2))));
			Позиция = Найти(Сред(Стр, СуммаПозиций + 1), Фрагмент2);
			СуммаПозиций = СуммаПозиций + Позиция;
		КонецЦикла;
	ИначеЕсли (Фрагмент1 <> Неопределено) и (Фрагмент2 <> Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент1);
		Пока Позиция > 0 Цикл
			Стр2 = ?(ИсключитьФрагменты, Сред(Стр, Позиция + СтрДлина(Фрагмент1)), Сред(Стр, Позиция));
			Позиция2 = Найти(Стр2, Фрагмент2);
			СуммаПозиций2 = Позиция2;
			Пока Позиция2 > 0 Цикл
				Если БезНаложения Тогда
					Если Найти(Сред(Стр2, 1, СуммаПозиций2 - 1), Фрагмент2) = 0 Тогда
						М.Добавить("" + ?(ИсключитьФрагменты, Сред(Стр2, 1, СуммаПозиций2 - 1), Сред(Стр2, 1, СуммаПозиций2 - 1 + СтрДлина(Фрагмент2))));
					КонецЕсли;
				Иначе
					М.Добавить("" + ?(ИсключитьФрагменты, Сред(Стр2, 1, СуммаПозиций2 - 1), Сред(Стр2, 1, СуммаПозиций2 - 1 + СтрДлина(Фрагмент2))));
				КонецЕсли;
				Позиция2 = Найти(Сред(Стр2, СуммаПозиций2 + 1), Фрагмент2);
				СуммаПозиций2 = СуммаПозиций2 + Позиция2;
			КонецЦикла;
			Стр = Сред(Стр, Позиция + 1);
			Позиция = Найти(Стр, Фрагмент1);
		КонецЦикла;
	КонецЕсли;
	
	Возврат М;
КонецФункции

Процедура ТестированиеКодов()
	Массив0 = НайтиФайлы(КаталогСправки, "*.html", Истина);
	ВыбранныеФайлы = Новый Массив();
	МассивГолова = Новый Массив();
	МассивХвост = Новый Массив();
	Для А = 0 По Массив0.ВГраница() Цикл
		// Пропустить класс или поставить в конец списка.
		Если (СтрНайти(Массив0[А].ПолноеИмя, "MessageBoxInterval") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "xxxxxxxxxxxxxxxxxxxx") > 0)
			Тогда // Этот не работает в линуксе и в линуксе пропустим.
			Если Вин Тогда
				МассивГолова.Добавить(Массив0[А]);
			Иначе
				Продолжить;
			КонецЕсли;
		ИначеЕсли 
			(СтрНайти(Массив0[А].ПолноеИмя, "ToplevelMouseEnterEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "ToplevelMouseLeaveEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "ToplevelMouseClickEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "OneScriptTerminalGuiResizedEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "BorderBorderChangedEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "ButtonMouseEnterEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "ButtonMouseLeaveEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "ButtonMouseClickEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "WindowMouseEnterEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "WindowMouseLeaveEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "WindowMouseClickEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "MenuBarMouseEnterEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "MenuBarMouseLeaveEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "MenuBarMenuOpening") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "StatusBarMouseClickEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "StatusBarMouseEnterEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "StatusBarMouseLeaveEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsBorderProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsFlagsProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsSizeProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsViewProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsXProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "EventArgsYProperty") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "MenuBarItemClickedEvent") > 0) 
			или (СтрНайти(Массив0[А].ПолноеИмя, "MenuItemClickedEvent") > 0) 
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			Тогда // Этот интерактивный и будет тестироваться в конце.
			МассивХвост.Добавить(Массив0[А]);
		Иначе
			МассивГолова.Добавить(Массив0[А]);
		КонецЕсли;
	КонецЦикла;
	Для А = 0 По МассивГолова.ВГраница() Цикл
		ВыбранныеФайлы.Добавить(МассивГолова[А]);
	КонецЦикла;
	Для А = 0 По МассивХвост.ВГраница() Цикл
		ВыбранныеФайлы.Добавить(МассивХвост[А]);
	КонецЦикла;
	
	Для А = 0 По ВыбранныеФайлы.ВГраница() Цикл
		Сообщить(" (" + Ф.Математика().Окр(((ТекущаяУниверсальнаяДатаВМиллисекундах() - Таймер)/1000)/60, 2) + " мин." + " " + А + " из " + 
		ВыбранныеФайлы.ВГраница() + ") " + ВыбранныеФайлы[А].ПолноеИмя);
		
		// // Избирательно для этого класса
		// Если Не (СтрНайти(ВыбранныеФайлы[А].ПолноеИмя, "CircularProgressBar") > 0) Тогда
			// Продолжить;
		// КонецЕсли;
		
		// Пропустить класс
		// Если (СтрНайти(ВыбранныеФайлы[А].ПолноеИмя, "MessageBoxInterval") > 0) 
			// или (СтрНайти(ВыбранныеФайлы[А].ПолноеИмя, "ToplevelMouseEnterEvent") > 0) 
			// Тогда
			// Продолжить;
		// КонецЕсли;

		ТекстДок = Новый ТекстовыйДокумент;
		ТекстДок.Прочитать(ВыбранныеФайлы[А].ПолноеИмя);
		Стр = ТекстДок.ПолучитьТекст();
		
		Заголовок = "";
		М0 = СтрНайтиМежду(Стр, "<H1 class=dtH1>", "</H1>", , );
		Если М0.Количество() > 0 Тогда
			Заголовок = СтрЗаменить(М0[0], "&nbsp;", " ");
		КонецЕсли;
		
		М = СтрНайтиМежду(Стр, "<summary>Тестовый код</summary>", "</PRE>", Ложь, );
		Если М.Количество() > 0 Тогда
			Для А2 = 0 По М.Количество() - 1 Цикл
				ТестовыйКод = СтрНайтиМежду(М[А2], "<DIV id=""cont2"">", "</DIV>", Ложь, )[0];
				ТестовыйКод = СтрНайтиМежду(ТестовыйКод, """>", "</DIV>", , )[0];
				
				Если Не (СокрЛП(ТестовыйКод) = "") Тогда
					// Заменим Сообщить на ТФ.ДобавитьВесьТекст
					ПодстрокаПоиска = "Сообщить(?(";
					Если Вин Тогда
						ПодстрокаЗамены = "ТФ.ДобавитьВесьТекст(Новый Файл(ТекущийСценарий().Источник).Путь + ""\LogTUI.txt"", (?(";
					Иначе
						ПодстрокаЗамены = "ТФ.ДобавитьВесьТекст(Новый Файл(ТекущийСценарий().Источник).Путь + ""/LogTUI.txt"", (?(";
					КонецЕсли;
					ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
					
					ПодстрокаПоиска = """ + "" "" + ТекущаяДата() + Символы.ПС);";
					ПодстрокаЗамены = """ + "" "" + ТекущаяДата() + Символы.ПС));";
					ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
					
					// Добавим учет ошибок тестового кода из за синтаксиса и других случаев.
					Голова = "Попытка
						|
						|";
						
					Если Вин Тогда
						Хвост = "
							|Исключение
							|	ИнформацияОбОшибке1 = ИнформацияОбОшибке();
							|	Ошибка = ""{" + Заголовок + " Модуль "" + ИнформацияОбОшибке1.ИмяМодуля + "" / Ошибка в строке: "" + ИнформацияОбОшибке1.НомерСтроки  + "" / "" + ИнформацияОбОшибке1.Описание + ""}"";
							|	ТФ.ДобавитьВесьТекст(Новый Файл(ТекущийСценарий().Источник).Путь + ""\LogTUI.txt"", Ошибка + Символы.ПС);
							|КонецПопытки;
							|";
					Иначе
						Хвост = "
							|Исключение
							|	ИнформацияОбОшибке1 = ИнформацияОбОшибке();
							|	Ошибка = ""{" + Заголовок + " Модуль "" + ИнформацияОбОшибке1.ИмяМодуля + "" / Ошибка в строке: "" + ИнформацияОбОшибке1.НомерСтроки  + "" / "" + ИнформацияОбОшибке1.Описание + ""}"";
							|	ТФ.ДобавитьВесьТекст(Новый Файл(ТекущийСценарий().Источник).Путь + ""/LogTUI.txt"", Ошибка + Символы.ПС);
							|КонецПопытки;
							|";
					КонецЕсли;
					
					ПодстрокаПоиска = "ПодключитьВнешнююКомпоненту";
					ПодстрокаЗамены = Голова + "
					|
					|
					|ПодключитьВнешнююКомпоненту";
					ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
						
					// ТестовыйКод = Голова + ТестовыйКод + Хвост;
					ТестовыйКод = ТестовыйКод + Хвост;
					
					Если Не Вин Тогда
						ПодстрокаПоиска = "ПодключитьВнешнююКомпоненту(""C:\444\111\OneScriptTerminalGui\OneScriptTerminalGui\bin\Debug\";
						ПодстрокаЗамены = "ПодключитьВнешнююКомпоненту(""/home/vlad/Projects/444/111/OneScriptTerminalGui/OneScriptTerminalGui/bin/Debug/";
						ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
					КонецЕсли;
					
					ТекстДокХХХ = Новый ТекстовыйДокумент;
					
					ИмяВременногоФайла = КаталогТестов + СтрЗаменить(ВыбранныеФайлы[А].Имя, ".html", "") + "-код.os";
					ИмяВременногоФайла = СтрЗаменить(ИмяВременногоФайла, "OSTGui.", "");
					ТекстДокХХХ.Записать(ИмяВременногоФайла, "UTF-8");
					
					// Если Вин Тогда
						// ПодстрокаПоиска = "C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll";
						// ПодстрокаЗамены = "/home/vlad/Projects/444/111/OneScriptForms/OneScriptForms/bin/Debug/OneScriptForms.dll";
						// ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
					// КонецЕсли;
					
					// Если Вин Тогда
						// ПодстрокаПоиска = "ПолучитьИмяВременногоФайла()";
						// ПодстрокаЗамены = """/home/vlad/Projects/444/gnftsu3o.6rb""";
						// ТестовыйКод = СтрЗаменить(ТестовыйКод, ПодстрокаПоиска, ПодстрокаЗамены);
					// КонецЕсли;
					
					ТекстДокХХХ.Прочитать(ИмяВременногоФайла);
					ТекстДокХХХ.УстановитьТекст(ТестовыйКод);
					ТекстДокХХХ.Записать(ИмяВременногоФайла, "UTF-8");
					Форма1.Фокус();
					// Ф.ПередатьУправление();
					Если Вин Тогда
						// ЗапуститьПриложение(<СтрокаКоманды>, <ТекущийКаталог>, <ДождатьсяЗавершения>, <КодВозврата>) 
						КодВозврата = Неопределено;
						ЗапуститьПриложение("" + ИмяВременногоФайла + "", , Истина, КодВозврата); // работает
						Если КодВозврата = 1 Тогда
							КаталогНаДиске = Новый Файл(ИмяЛогФайла);
							Если Не (КаталогНаДиске.Существует()) Тогда
								Возврат;
							КонецЕсли;
							ТекстДок = Новый ТекстовыйДокумент;
							ТекстДок.Прочитать(ИмяЛогФайла, "UTF-8");
							СтрЛог = ТекстДок.ПолучитьТекст();
							СтрЛог = СтрЛог + "{" + ИмяВременногоФайла + "}";
							ТекстДок.УстановитьТекст(СтрЛог);
							ТекстДок.Записать(ИмяЛогФайла);
						Иначе // КодВозврата = 1
							// Сообщить("=====" + КодВозврата);
						КонецЕсли;
					Иначе
						// // // // // Команда1("oscript", ИмяВременногоФайла, ПолеВвода1, ВыбранныеФайлы[А].Имя, ТестовыйКод);
						КодВозврата = Неопределено;
						ЗапуститьПриложение("oscript " + ИмяВременногоФайла + "", , Истина, КодВозврата); // работает
						Если КодВозврата = 1 Тогда
							КаталогНаДиске = Новый Файл(ИмяЛогФайла);
							Если Не (КаталогНаДиске.Существует()) Тогда
								Возврат;
							КонецЕсли;
							ТекстДок = Новый ТекстовыйДокумент;
							ТекстДок.Прочитать(ИмяЛогФайла, "UTF-8");
							СтрЛог = ТекстДок.ПолучитьТекст();
							СтрЛог = СтрЛог + "{" + ИмяВременногоФайла + "}";
							ТекстДок.УстановитьТекст(СтрЛог);
							ТекстДок.Записать(ИмяЛогФайла);
						Иначе // КодВозврата = 1
							// Сообщить("=====" + КодВозврата);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры//ТестированиеКодов

Процедура АнализЛогФайла()
	КаталогНаДиске = Новый Файл(ИмяЛогФайла);
    Если Не (КаталогНаДиске.Существует()) Тогда
		Возврат;
	КонецЕсли;
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяЛогФайла, "UTF-8");
	Стр = ТекстДок.ПолучитьТекст();
	КолСтрок = СтрЧислоСтрок(Стр);
	Для А = 1 По КолСтрок Цикл
		ТекСтрока = СтрПолучитьСтроку(Стр, А);
		Если (СтрНайти(ТекСтрока, "!!!") > 0) или (СтрНайти(ТекСтрока, "{") > 0) Тогда
			СписокОшибок.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	// Ф.ПередатьУправление();
КонецПроцедуры//АнализЛогФайла

Таймер = ТекущаяУниверсальнаяДатаВМиллисекундах();

Если СтрНайти((Новый СистемнаяИнформация()).ВерсияОС, "Windows") > 0 Тогда
	Вин = Истина;
Иначе
	Вин = Ложь;
КонецЕсли;
Если Вин Тогда
	КаталогСправки = "C:\444\OneScriptTerminalGui\docs\OSTGui";// без слэша в конце
	КаталогБиблиотеки = "C:\444\111\OneScriptTerminalGui\OneScriptTerminalGui\bin\Debug";// без слэша в конце
	ПутьБиблиотекиФорм = "C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll";// без слэша в конце
	КаталогТестов = "C:\444\ТестыTUI\"; // со слэшем в конце
	ИмяЛогФайла = "C:\444\ТестыTUI\LogTUI.txt";
	ПодключитьВнешнююКомпоненту(КаталогБиблиотеки + "\OneScriptTerminalGui.dll");
Иначе
	КаталогСправки = "/home/vlad/Projects/444/OneScriptTerminalGui/docs/OSTGui";// без слэша
	КаталогБиблиотеки = "/home/vlad/Projects/444/111/OneScriptTerminalGui/OneScriptTerminalGui/bin/Debug";// без слэша
	ПутьБиблиотекиФорм = "/home/vlad/Projects/444/111/OneScriptForms/OneScriptForms/bin/Debug/OneScriptForms.dll";// без слэша в конце
	КаталогТестов = "/home/vlad/Projects/444/ТестыTUI/"; // со слэшем в конце
	ИмяЛогФайла = "/home/vlad/Projects/444/ТестыTUI/LogTUI.txt";
	ПодключитьВнешнююКомпоненту(КаталогБиблиотеки + "/OneScriptTerminalGui.dll");
КонецЕсли;
ПодключитьВнешнююКомпоненту(ПутьБиблиотекиФорм);
// // // // // ПодключитьВнешнююКомпоненту("C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll");
Ф = Новый ФормыДляОдноСкрипта();

Если Вин Тогда
	УдалитьФайлы(КаталогТестов, "*.os");
	УдалитьФайлы(ИмяЛогФайла);
Иначе
	// УдалитьФайлы("/home/vlad/Projects/444/ТестыTUI", "*.os");
	УдалитьФайлы(КаталогТестов, "*.os");
	УдалитьФайлы(ИмяЛогФайла);
КонецЕсли;

ТекстДок = Новый ТекстовыйДокумент;
ТекстДок.УстановитьТекст("");
ТекстДок.Записать(ИмяЛогФайла);


Форма1 = Ф.Форма();
Форма1.Текст = "Общий тест OneScriptTerminalGui.dll";
Форма1.Ширина = 1100;
Форма1.Высота = 600;
Форма1.Отображать = Истина;
Форма1.Показать();

ПолеВвода1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеВвода());
ПолеВвода1.МногострочныйРежим = Истина;
ПолеВвода1.Стыковка = Ф.СтильСтыковки.Заполнение;
ПолеВвода1.ЦветФона = Ф.Цвет().Черный;
ПолеВвода1.ОсновнойЦвет = Ф.Цвет().БледноЗеленый;
ПолеВвода1.ПолосыПрокрутки = Ф.ПолосыПрокрутки.Обе;
ПолеВвода1.ПринятиеВозврат = Истина;
ПолеВвода1.Перенос = Ложь;
ПолеВвода1.РегистрСимволов = Ф.РегистрСимволов.Стандартный;

СписокОшибок = Новый СписокЗначений;

ТестированиеКодов();
АнализЛогФайла();

ПолеВвода1.ДобавитьТекст("================" + Символы.ПС);
ПолеВвода1.ДобавитьТекст("Тест выполнен за: " + ((ТекущаяУниверсальнаяДатаВМиллисекундах()-Таймер)/1000)/60 + " мин." + " " + ТекущаяДата() + Символы.ПС);
ПолеВвода1.ДобавитьТекст("Ошибок = " + СписокОшибок.Количество() + Символы.ПС);
Для А = 0 По СписокОшибок.Количество() - 1 Цикл
	ПолеВвода1.ДобавитьТекст("" + СписокОшибок.Получить(А).Значение + Символы.ПС);
	ПолеВвода1.НачалоВыделения = ПолеВвода1.ДлинаТекста;
	ПолеВвода1.ПрокрутитьДоКурсора();
КонецЦикла;

Ф.ЗапуститьОбработкуСобытий();